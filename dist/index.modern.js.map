{"version":3,"file":"index.modern.js","sources":["../src/utils/basicChartStyle.js","../src/utils/transformConfig.js","../src/utils/normalizeData.js","../src/hooks/useECharts.js","../src/components/Bar.js","../src/components/Line.js","../src/components/Pie.js","../src/components/Doughnut.js","../src/components/StackBar.js","../src/components/StackClusterColumn.js"],"sourcesContent":["export const backgroundColor = {\n  backgroundColor: 'transparent'\n};\n\nexport const Animation = {\n  animation: true,\n  animationThreshold: 2000,\n  animationDuration: 1000,\n  animationEasing: 'cubicOut',\n  animationDelay: 0,\n  animationDurationUpdate: 300,\n  animationEasingUpdate: 'cubicOut',\n  animationDelayUpdate: 0\n};\n\nexport const TextStyle = {\n  color: '#000',\n  fontSize: 12,\n  fontWeight: 'bold'\n};\n\nexport const Colors = {\n  color: [\n    '#4475B4',\n    '#73ADD1',\n    '#AAD9E8',\n    '#FEE08F',\n    '#FDAE60',\n    '#F36C42',\n    '#D73027'\n  ]\n};\n\nexport const Legend = {\n  show: true,\n  icon: 'circle',\n  top: 35,\n  left: 'center',\n  align: 'left',\n  orient: 'horizontal',\n  itemGap: 10,\n  textStyle: {\n    fontWeight: 'normal',\n    fontSize: 12\n  }\n};\n\nexport const Title = {\n  show: true,\n  text: '',\n  subtext: '',\n  textAlign: 'center',\n  left: '50%',\n  textStyle: {\n    color: '#000',\n    fontSize: 14,\n    fontWeight: 'bold'\n  }\n};\n\nexport const Grid = {\n  containLabel: true,\n  left: '4%',\n  right: '4%',\n  bottom: '10%',\n  top: '25%'\n};\n\nexport const Tooltip = {\n  trigger: 'item',\n  axisPointer: {\n    type: 'shadow'\n  },\n  textStyle: {\n    color: '#000',\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n};\n\nexport const Axis = {\n  axisLabel: {\n    color: '#000',\n    fontSize: 12,\n    fontWeight: 'normal'\n  },\n  axisLine: {\n    lineStyle: {\n      color: '#000'\n    }\n  },\n  axisTick: {\n    lineStyle: {\n      color: '#000'\n    }\n  }\n};\n","import {\n  Animation,\n  Colors,\n  TextStyle,\n  backgroundColor,\n  Title,\n  Grid,\n  Tooltip,\n  Axis,\n  Legend\n} from './basicChartStyle';\n\nconst transformConfig = ({\n  title,\n  xAxisLabel = null,\n  yAxisLabel = null,\n  horizontal = false,\n  dimensions = []\n}) => {\n  return {\n    title: {\n      ...Title,\n      text: title\n    },\n    grid: {\n      ...Grid\n    },\n    legend: {\n      ...Legend,\n      data: dimensions.slice(1)\n    },\n    tooltip: {\n      ...Tooltip\n    },\n    xAxis: {\n      type: horizontal ? 'value' : 'category',\n      name: xAxisLabel,\n      nameTextStyle: { ...TextStyle },\n      nameLocation: horizontal ? 'end' : 'center',\n      nameGap: horizontal ? 20 : 45,\n      ...Axis\n    },\n    yAxis: {\n      type: horizontal ? 'category' : 'value',\n      name: yAxisLabel,\n      nameTextStyle: { ...TextStyle },\n      nameLocation: horizontal ? 'center' : 'end',\n      nameGap: horizontal ? 45 : 20,\n      ...Axis\n    },\n    series: [],\n    ...Colors,\n    ...backgroundColor,\n    ...Animation\n  };\n};\n\nexport default transformConfig;\n","const sortKeys = (keys = []) => {\n  // Identify the key to be placed first based on criteria\n  const dynamicKey = keys.find((key) => isNaN(key));\n  const otherKeys = keys.filter((key) => key !== dynamicKey);\n  // Combine the dynamic key with the other keys\n  return [dynamicKey, ...otherKeys];\n};\n\nconst normalizeData = (data) => {\n  if (Array.isArray(data)) {\n    if (data.length > 0 && Array.isArray(data[0])) {\n      // Handle tabular format (2d array)\n      const [categories, ...rows] = data;\n\n      const dimensions = categories.map((item) => item.toLowerCase());\n      const source = rows.map((row) => {\n        const obj = {};\n        categories.forEach((cat, index) => {\n          obj[cat.toLowerCase()] = row[index] !== undefined ? row[index] : 0;\n        });\n        return obj;\n      });\n\n      return {\n        dimensions,\n        source\n      };\n    } else if (data.length > 0 && typeof data[0] === 'object') {\n      // Handle key-value format (Row based key-value format (object array))\n      const keys = Array.from(\n        new Set(data.flatMap((d) => (d ? Object.keys(d) : [])))\n      );\n      const sortedKeys = sortKeys(keys);\n\n      const dimensions = sortedKeys;\n      const source = data\n        .filter((i) => i)\n        .map((item) => {\n          const obj = {};\n          sortedKeys.forEach((key) => {\n            obj[key] = item[key] !== undefined ? item[key] : 0;\n          });\n          return obj;\n        });\n\n      return {\n        dimensions,\n        source\n      };\n    }\n  } else if (typeof data === 'object') {\n    // Handle object-based format (Column based key-value format)\n    const keys = Object.keys(data);\n    const maxLength = Math.max(...keys.map((key) => data[key].length));\n    const sortedKeys = sortKeys(keys);\n\n    const source = Array.from({ length: maxLength }, (_, i) => {\n      return sortedKeys.reduce((acc, key) => {\n        acc[key] = data[key][i] !== undefined ? data[key][i] : 0;\n        return acc;\n      }, {});\n    });\n\n    return {\n      dimensions: sortedKeys,\n      source\n    };\n  }\n\n  throw new Error('Unsupported data format');\n};\n\nexport default normalizeData;\n","import { useEffect, useRef } from 'react';\nimport * as echarts from 'echarts';\nimport transformConfig from '../utils/transformConfig';\nimport normalizeData from '../utils/normalizeData';\n\nconst useECharts = ({ config = {}, data = [], getOptions = () => {} }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    let chart;\n\n    if (chartRef.current) {\n      setTimeout(() => {\n        if (!chart && chartRef.current) {\n          chart = echarts.init(chartRef.current);\n        }\n        const { dimensions, source } = normalizeData(data);\n        const options = {\n          ...transformConfig({ ...config, dimensions }),\n          dataset: {\n            dimensions,\n            source\n          },\n          ...getOptions({ dimensions })\n        };\n        if (chart) {\n          chart.setOption(options);\n        }\n      }, 0);\n    }\n\n    return () => {\n      if (chart) {\n        chart.dispose();\n      }\n    };\n  }, [config, data, getOptions]);\n\n  return chartRef;\n};\n\nexport default useECharts;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({ horizontal = false, dimensions = [] }) => {\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'bar',\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    series\n  };\n};\n\nconst Bar = ({ config, data, horizontal = false }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions }) => getOptions({ horizontal, dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Bar;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({ horizontal = false, dimensions = [] }) => {\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'line',\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    series\n  };\n};\n\nconst Line = ({ config, data, horizontal = false }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions }) => getOptions({ horizontal, dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Line;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({ dimensions = [] }) => {\n  const itemName = dimensions[0];\n  const value = dimensions.slice(1);\n  return {\n    series: [\n      {\n        type: 'pie',\n        encode: {\n          itemName,\n          value\n        }\n      }\n    ]\n  };\n};\n\nconst Pie = ({ config, data }) => {\n  const chartRef = useECharts({\n    config,\n    data,\n    getOptions: ({ dimensions }) => getOptions({ dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Pie;\n","import React, { useMemo } from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst MAX = 70;\n\nconst getOptions = ({ dimensions = [], radius }) => {\n  const itemName = dimensions[0];\n  const value = dimensions.slice(1);\n  return {\n    series: [\n      {\n        type: 'pie',\n        radius,\n        encode: {\n          itemName,\n          value\n        }\n      }\n    ]\n  };\n};\n\nconst Doughnut = ({ config, data, size = 40 }) => {\n  const torus = useMemo(() => {\n    if (size >= 70) {\n      return 0;\n    }\n    return MAX - size;\n  }, [size]);\n\n  const chartRef = useECharts({\n    config,\n    data,\n    getOptions: ({ dimensions }) =>\n      getOptions({ dimensions, radius: [`${torus}%`, `${MAX}%`] })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Doughnut;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\nimport { Tooltip } from '../utils/basicChartStyle';\n\nconst getOptions = ({ dimensions, stackMapping, horizontal = true }) => {\n  // Reverse the stackMapping to get a dimension to stack group map\n  const dimensionToStackMap = {};\n  Object.keys(stackMapping).forEach((stackGroup) => {\n    stackMapping[stackGroup].forEach((dim) => {\n      dimensionToStackMap[dim] = stackGroup;\n    });\n  });\n\n  // Create series based on the reversed stack mapping\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'bar',\n    stack: dimensionToStackMap[dim] || 'defaultStack',\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    tooltip: {\n      ...Tooltip,\n      trigger: 'axis'\n    },\n    series\n  };\n};\n\nconst StackBar = ({ config, data, stackMapping = {}, horizontal = true }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions }) =>\n      getOptions({ dimensions, stackMapping, horizontal })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default StackBar;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\nimport { Tooltip } from '../utils/basicChartStyle';\n\nconst getOptions = ({ horizontal = false, dimensions = [] }) => {\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'bar',\n    barGap: 0,\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    tooltip: {\n      ...Tooltip,\n      trigger: 'axis'\n    },\n    series\n  };\n};\n\nconst StackClusterColumn = ({ config, data, horizontal = false }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions }) => getOptions({ horizontal, dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default StackClusterColumn;\n"],"names":["backgroundColor","Animation","animation","animationThreshold","animationDuration","animationEasing","animationDelay","animationDurationUpdate","animationEasingUpdate","animationDelayUpdate","TextStyle","color","fontSize","fontWeight","Colors","Legend","show","icon","top","left","align","orient","itemGap","textStyle","Title","text","subtext","textAlign","Grid","containLabel","right","bottom","Tooltip","trigger","axisPointer","type","Axis","axisLabel","axisLine","lineStyle","axisTick","transformConfig","title","xAxisLabel","yAxisLabel","horizontal","dimensions","grid","legend","data","slice","tooltip","xAxis","name","nameTextStyle","nameLocation","nameGap","yAxis","series","sortKeys","keys","dynamicKey","find","key","isNaN","otherKeys","filter","normalizeData","Array","isArray","length","categories","rows","map","item","toLowerCase","source","row","obj","forEach","cat","index","undefined","from","Set","flatMap","d","Object","sortedKeys","i","maxLength","Math","max","_","reduce","acc","Error","useECharts","config","getOptions","chartRef","useRef","useEffect","chart","current","setTimeout","echarts","options","dataset","setOption","dispose","dim","encode","x","y","Bar","React","createElement","ref","role","className","styles","container","Line","itemName","value","Pie","MAX","radius","Doughnut","size","torus","useMemo","stackMapping","dimensionToStackMap","stackGroup","stack","StackBar","barGap","StackClusterColumn"],"mappings":"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"}