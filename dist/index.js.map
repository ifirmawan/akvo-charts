{"version":3,"file":"index.js","sources":["../src/utils/basicChartStyle.js","../src/utils/transformConfig.js","../src/utils/normalizeData.js","../src/hooks/useECharts.js","../src/components/Bar.js","../src/components/Line.js","../src/components/Pie.js","../src/components/Doughnut.js","../src/components/StackBar.js","../src/components/StackClusterColumn.js"],"sourcesContent":["export const backgroundColor = {\n  backgroundColor: 'transparent'\n};\n\nexport const Animation = {\n  animation: true,\n  animationThreshold: 2000,\n  animationDuration: 1000,\n  animationEasing: 'cubicOut',\n  animationDelay: 0,\n  animationDurationUpdate: 300,\n  animationEasingUpdate: 'cubicOut',\n  animationDelayUpdate: 0\n};\n\nexport const TextStyle = {\n  color: '#000',\n  fontSize: 12,\n  fontWeight: 'bold'\n};\n\nexport const Colors = {\n  color: [\n    '#4475B4',\n    '#73ADD1',\n    '#AAD9E8',\n    '#FEE08F',\n    '#FDAE60',\n    '#F36C42',\n    '#D73027'\n  ]\n};\n\nexport const Legend = {\n  show: true,\n  icon: 'circle',\n  top: 35,\n  left: 'center',\n  align: 'left',\n  orient: 'horizontal',\n  itemGap: 10,\n  textStyle: {\n    fontWeight: 'normal',\n    fontSize: 12\n  }\n};\n\nexport const Title = {\n  show: true,\n  text: '',\n  subtext: '',\n  textAlign: 'center',\n  left: '50%',\n  textStyle: {\n    color: '#000',\n    fontSize: 14,\n    fontWeight: 'bold'\n  }\n};\n\nexport const Grid = {\n  containLabel: true,\n  left: '4%',\n  right: '4%',\n  bottom: '10%',\n  top: '25%'\n};\n\nexport const Tooltip = {\n  trigger: 'item',\n  axisPointer: {\n    type: 'shadow'\n  },\n  textStyle: {\n    color: '#000',\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n};\n\nexport const Axis = {\n  axisLabel: {\n    color: '#000',\n    fontSize: 12,\n    fontWeight: 'normal'\n  },\n  axisLine: {\n    lineStyle: {\n      color: '#000'\n    }\n  },\n  axisTick: {\n    lineStyle: {\n      color: '#000'\n    }\n  }\n};\n","import {\n  Animation,\n  Colors,\n  TextStyle,\n  backgroundColor,\n  Title,\n  Grid,\n  Tooltip,\n  Axis,\n  Legend\n} from './basicChartStyle';\n\nconst transformConfig = ({\n  title,\n  xAxisLabel = null,\n  yAxisLabel = null,\n  horizontal = false,\n  dimensions = []\n}) => {\n  return {\n    title: {\n      ...Title,\n      text: title\n    },\n    grid: {\n      ...Grid\n    },\n    legend: {\n      ...Legend,\n      data: dimensions.slice(1)\n    },\n    tooltip: {\n      ...Tooltip\n    },\n    xAxis: {\n      type: horizontal ? 'value' : 'category',\n      name: xAxisLabel,\n      nameTextStyle: { ...TextStyle },\n      nameLocation: horizontal ? 'end' : 'center',\n      nameGap: horizontal ? 20 : 45,\n      ...Axis\n    },\n    yAxis: {\n      type: horizontal ? 'category' : 'value',\n      name: yAxisLabel,\n      nameTextStyle: { ...TextStyle },\n      nameLocation: horizontal ? 'center' : 'end',\n      nameGap: horizontal ? 45 : 20,\n      ...Axis\n    },\n    series: [],\n    ...Colors,\n    ...backgroundColor,\n    ...Animation\n  };\n};\n\nexport default transformConfig;\n","const sortKeys = (keys = []) => {\n  // Identify the key to be placed first based on criteria\n  const dynamicKey = keys.find((key) => isNaN(key));\n  const otherKeys = keys.filter((key) => key !== dynamicKey);\n  // Combine the dynamic key with the other keys\n  return [dynamicKey, ...otherKeys];\n};\n\nconst normalizeData = (data) => {\n  if (Array.isArray(data)) {\n    if (data.length > 0 && Array.isArray(data[0])) {\n      // Handle tabular format (2d array)\n      const [categories, ...rows] = data;\n\n      const dimensions = categories.map((item) => item.toLowerCase());\n      const source = rows.map((row) => {\n        const obj = {};\n        categories.forEach((cat, index) => {\n          obj[cat.toLowerCase()] = row[index] !== undefined ? row[index] : 0;\n        });\n        return obj;\n      });\n\n      return {\n        dimensions,\n        source\n      };\n    } else if (data.length > 0 && typeof data[0] === 'object') {\n      // Handle key-value format (Row based key-value format (object array))\n      const keys = Array.from(\n        new Set(data.flatMap((d) => (d ? Object.keys(d) : [])))\n      );\n      const sortedKeys = sortKeys(keys);\n\n      const dimensions = sortedKeys;\n      const source = data\n        .filter((i) => i)\n        .map((item) => {\n          const obj = {};\n          sortedKeys.forEach((key) => {\n            obj[key] = item[key] !== undefined ? item[key] : 0;\n          });\n          return obj;\n        });\n\n      return {\n        dimensions,\n        source\n      };\n    }\n  } else if (typeof data === 'object') {\n    // Handle object-based format (Column based key-value format)\n    const keys = Object.keys(data);\n    const maxLength = Math.max(...keys.map((key) => data[key].length));\n    const sortedKeys = sortKeys(keys);\n\n    const source = Array.from({ length: maxLength }, (_, i) => {\n      return sortedKeys.reduce((acc, key) => {\n        acc[key] = data[key][i] !== undefined ? data[key][i] : 0;\n        return acc;\n      }, {});\n    });\n\n    return {\n      dimensions: sortedKeys,\n      source\n    };\n  }\n\n  throw new Error('Unsupported data format');\n};\n\nexport default normalizeData;\n","import { useEffect, useRef } from 'react';\nimport * as echarts from 'echarts';\nimport transformConfig from '../utils/transformConfig';\nimport normalizeData from '../utils/normalizeData';\n\nconst useECharts = ({ config = {}, data = [], getOptions = () => {} }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    let chart;\n\n    if (chartRef.current) {\n      setTimeout(() => {\n        if (!chart && chartRef.current) {\n          chart = echarts.init(chartRef.current);\n        }\n        const { dimensions, source } = normalizeData(data);\n        const options = {\n          ...transformConfig({ ...config, dimensions }),\n          dataset: {\n            dimensions,\n            source\n          },\n          ...getOptions({ dimensions })\n        };\n        if (chart) {\n          chart.setOption(options);\n        }\n      }, 0);\n    }\n\n    return () => {\n      if (chart) {\n        chart.dispose();\n      }\n    };\n  }, [config, data, getOptions]);\n\n  return chartRef;\n};\n\nexport default useECharts;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({ horizontal = false, dimensions = [] }) => {\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'bar',\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    series\n  };\n};\n\nconst Bar = ({ config, data, horizontal = false }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions }) => getOptions({ horizontal, dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Bar;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({ horizontal = false, dimensions = [] }) => {\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'line',\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    series\n  };\n};\n\nconst Line = ({ config, data, horizontal = false }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions }) => getOptions({ horizontal, dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Line;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({ dimensions = [] }) => {\n  const itemName = dimensions[0];\n  const value = dimensions.slice(1);\n  return {\n    series: [\n      {\n        type: 'pie',\n        encode: {\n          itemName,\n          value\n        }\n      }\n    ]\n  };\n};\n\nconst Pie = ({ config, data }) => {\n  const chartRef = useECharts({\n    config,\n    data,\n    getOptions: ({ dimensions }) => getOptions({ dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Pie;\n","import React, { useMemo } from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst MAX = 70;\n\nconst getOptions = ({ dimensions = [], radius }) => {\n  const itemName = dimensions[0];\n  const value = dimensions.slice(1);\n  return {\n    series: [\n      {\n        type: 'pie',\n        radius,\n        encode: {\n          itemName,\n          value\n        }\n      }\n    ]\n  };\n};\n\nconst Doughnut = ({ config, data, size = 40 }) => {\n  const torus = useMemo(() => {\n    if (size >= 70) {\n      return 0;\n    }\n    return MAX - size;\n  }, [size]);\n\n  const chartRef = useECharts({\n    config,\n    data,\n    getOptions: ({ dimensions }) =>\n      getOptions({ dimensions, radius: [`${torus}%`, `${MAX}%`] })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Doughnut;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\nimport { Tooltip } from '../utils/basicChartStyle';\n\nconst getOptions = ({ dimensions, stackMapping, horizontal = true }) => {\n  // Reverse the stackMapping to get a dimension to stack group map\n  const dimensionToStackMap = {};\n  Object.keys(stackMapping).forEach((stackGroup) => {\n    stackMapping[stackGroup].forEach((dim) => {\n      dimensionToStackMap[dim] = stackGroup;\n    });\n  });\n\n  // Create series based on the reversed stack mapping\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'bar',\n    stack: dimensionToStackMap[dim] || 'defaultStack',\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    tooltip: {\n      ...Tooltip,\n      trigger: 'axis'\n    },\n    series\n  };\n};\n\nconst StackBar = ({ config, data, stackMapping = {}, horizontal = true }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions }) =>\n      getOptions({ dimensions, stackMapping, horizontal })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default StackBar;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\nimport { Tooltip } from '../utils/basicChartStyle';\n\nconst getOptions = ({ horizontal = false, dimensions = [] }) => {\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'bar',\n    barGap: 0,\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    tooltip: {\n      ...Tooltip,\n      trigger: 'axis'\n    },\n    series\n  };\n};\n\nconst StackClusterColumn = ({ config, data, horizontal = false }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions }) => getOptions({ horizontal, dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default StackClusterColumn;\n"],"names":["backgroundColor","Animation","animation","animationThreshold","animationDuration","animationEasing","animationDelay","animationDurationUpdate","animationEasingUpdate","animationDelayUpdate","TextStyle","color","fontSize","fontWeight","Colors","Legend","show","icon","top","left","align","orient","itemGap","textStyle","Title","text","subtext","textAlign","Grid","containLabel","right","bottom","Tooltip","trigger","axisPointer","type","Axis","axisLabel","axisLine","lineStyle","axisTick","transformConfig","_ref","title","_ref$xAxisLabel","xAxisLabel","_ref$yAxisLabel","yAxisLabel","_ref$horizontal","horizontal","_ref$dimensions","dimensions","_extends","grid","legend","data","slice","tooltip","xAxis","name","nameTextStyle","nameLocation","nameGap","yAxis","series","sortKeys","keys","dynamicKey","find","key","isNaN","otherKeys","filter","concat","normalizeData","Array","isArray","length","categories","rows","map","item","toLowerCase","source","row","obj","forEach","cat","index","undefined","from","Set","flatMap","d","Object","sortedKeys","i","maxLength","Math","max","apply","_","reduce","acc","Error","useECharts","_ref$config","config","_ref$data","_ref$getOptions","getOptions","chartRef","useRef","useEffect","chart","current","setTimeout","echarts","_normalizeData","options","dataset","setOption","dispose","dim","encode","x","y","Bar","_ref2","_ref2$horizontal","_ref3","React","createElement","ref","role","className","styles","container","Line","itemName","value","Pie","MAX","radius","Doughnut","_ref2$size","size","torus","useMemo","stackMapping","dimensionToStackMap","stackGroup","stack","StackBar","_ref2$stackMapping","barGap","StackClusterColumn"],"mappings":"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"}